//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("LeDoyenModel", "FK_ldn_Agreements_ldn_Contractors", "ldn_Contractors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeDoyen.AtContract.Business.Entity.Contractor), "ldn_Agreements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeDoyen.AtContract.Business.Entity.Agreement), true)]
[assembly: EdmRelationshipAttribute("LeDoyenModel", "FK_ldn_Agreements_ldn_PaymentTypes", "ldn_PaymentTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeDoyen.AtContract.Business.Entity.PaymentType), "ldn_Agreements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeDoyen.AtContract.Business.Entity.Agreement), true)]
[assembly: EdmRelationshipAttribute("LeDoyenModel", "FK_ldn_Agreements_ldn_Projects", "ldn_Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LeDoyen.AtContract.Business.Entity.Project), "ldn_Agreements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LeDoyen.AtContract.Business.Entity.Agreement), true)]

#endregion

namespace LeDoyen.AtContract.Business.Entity
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class LeDoyenEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект LeDoyenEntities, используя строку соединения из раздела "LeDoyenEntities" файла конфигурации приложения.
        /// </summary>
        public LeDoyenEntities() : base("name=LeDoyenEntities", "LeDoyenEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LeDoyenEntities.
        /// </summary>
        public LeDoyenEntities(string connectionString) : base(connectionString, "LeDoyenEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LeDoyenEntities.
        /// </summary>
        public LeDoyenEntities(EntityConnection connection) : base(connection, "LeDoyenEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Agreement> Agreements
        {
            get
            {
                if ((_Agreements == null))
                {
                    _Agreements = base.CreateObjectSet<Agreement>("Agreements");
                }
                return _Agreements;
            }
        }
        private ObjectSet<Agreement> _Agreements;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Contractor> Contractors
        {
            get
            {
                if ((_Contractors == null))
                {
                    _Contractors = base.CreateObjectSet<Contractor>("Contractors");
                }
                return _Contractors;
            }
        }
        private ObjectSet<Contractor> _Contractors;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PaymentType> PaymentTypes
        {
            get
            {
                if ((_PaymentTypes == null))
                {
                    _PaymentTypes = base.CreateObjectSet<PaymentType>("PaymentTypes");
                }
                return _PaymentTypes;
            }
        }
        private ObjectSet<PaymentType> _PaymentTypes;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Agreements. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAgreements(Agreement agreement)
        {
            base.AddObject("Agreements", agreement);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Contractors. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToContractors(Contractor contractor)
        {
            base.AddObject("Contractors", contractor);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Languages. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PaymentTypes. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPaymentTypes(PaymentType paymentType)
        {
            base.AddObject("PaymentTypes", paymentType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Projects. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeDoyenModel", Name="Agreement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Agreement : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Agreement.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="agreementNumber">Исходное значение свойства AgreementNumber.</param>
        /// <param name="agreementDate">Исходное значение свойства AgreementDate.</param>
        /// <param name="serviceStartDate">Исходное значение свойства ServiceStartDate.</param>
        /// <param name="serviceEndDate">Исходное значение свойства ServiceEndDate.</param>
        /// <param name="paymentDueDate">Исходное значение свойства PaymentDueDate.</param>
        /// <param name="contractorID">Исходное значение свойства ContractorID.</param>
        /// <param name="paymentTypeID">Исходное значение свойства PaymentTypeID.</param>
        /// <param name="projectID">Исходное значение свойства ProjectID.</param>
        public static Agreement CreateAgreement(global::System.Int32 id, global::System.Int32 agreementNumber, global::System.DateTime agreementDate, global::System.DateTime serviceStartDate, global::System.DateTime serviceEndDate, global::System.DateTime paymentDueDate, global::System.Int32 contractorID, global::System.Int32 paymentTypeID, global::System.Int32 projectID)
        {
            Agreement agreement = new Agreement();
            agreement.ID = id;
            agreement.AgreementNumber = agreementNumber;
            agreement.AgreementDate = agreementDate;
            agreement.ServiceStartDate = serviceStartDate;
            agreement.ServiceEndDate = serviceEndDate;
            agreement.PaymentDueDate = paymentDueDate;
            agreement.ContractorID = contractorID;
            agreement.PaymentTypeID = paymentTypeID;
            agreement.ProjectID = projectID;
            return agreement;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgreementNumber
        {
            get
            {
                return _AgreementNumber;
            }
            set
            {
                OnAgreementNumberChanging(value);
                ReportPropertyChanging("AgreementNumber");
                _AgreementNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementNumber");
                OnAgreementNumberChanged();
            }
        }
        private global::System.Int32 _AgreementNumber;
        partial void OnAgreementNumberChanging(global::System.Int32 value);
        partial void OnAgreementNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AgreementDate
        {
            get
            {
                return _AgreementDate;
            }
            set
            {
                OnAgreementDateChanging(value);
                ReportPropertyChanging("AgreementDate");
                _AgreementDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgreementDate");
                OnAgreementDateChanged();
            }
        }
        private global::System.DateTime _AgreementDate;
        partial void OnAgreementDateChanging(global::System.DateTime value);
        partial void OnAgreementDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServiceStartDate
        {
            get
            {
                return _ServiceStartDate;
            }
            set
            {
                OnServiceStartDateChanging(value);
                ReportPropertyChanging("ServiceStartDate");
                _ServiceStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceStartDate");
                OnServiceStartDateChanged();
            }
        }
        private global::System.DateTime _ServiceStartDate;
        partial void OnServiceStartDateChanging(global::System.DateTime value);
        partial void OnServiceStartDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServiceEndDate
        {
            get
            {
                return _ServiceEndDate;
            }
            set
            {
                OnServiceEndDateChanging(value);
                ReportPropertyChanging("ServiceEndDate");
                _ServiceEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceEndDate");
                OnServiceEndDateChanged();
            }
        }
        private global::System.DateTime _ServiceEndDate;
        partial void OnServiceEndDateChanging(global::System.DateTime value);
        partial void OnServiceEndDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDueDate
        {
            get
            {
                return _PaymentDueDate;
            }
            set
            {
                OnPaymentDueDateChanging(value);
                ReportPropertyChanging("PaymentDueDate");
                _PaymentDueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDueDate");
                OnPaymentDueDateChanged();
            }
        }
        private global::System.DateTime _PaymentDueDate;
        partial void OnPaymentDueDateChanging(global::System.DateTime value);
        partial void OnPaymentDueDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private global::System.Int32 _ContractorID;
        partial void OnContractorIDChanging(global::System.Int32 value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentTypeID
        {
            get
            {
                return _PaymentTypeID;
            }
            set
            {
                OnPaymentTypeIDChanging(value);
                ReportPropertyChanging("PaymentTypeID");
                _PaymentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentTypeID");
                OnPaymentTypeIDChanged();
            }
        }
        private global::System.Int32 _PaymentTypeID;
        partial void OnPaymentTypeIDChanging(global::System.Int32 value);
        partial void OnPaymentTypeIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeDoyenModel", "FK_ldn_Agreements_ldn_Contractors", "ldn_Contractors")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("LeDoyenModel.FK_ldn_Agreements_ldn_Contractors", "ldn_Contractors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("LeDoyenModel.FK_ldn_Agreements_ldn_Contractors", "ldn_Contractors").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("LeDoyenModel.FK_ldn_Agreements_ldn_Contractors", "ldn_Contractors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("LeDoyenModel.FK_ldn_Agreements_ldn_Contractors", "ldn_Contractors", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeDoyenModel", "FK_ldn_Agreements_ldn_PaymentTypes", "ldn_PaymentTypes")]
        public PaymentType PaymentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("LeDoyenModel.FK_ldn_Agreements_ldn_PaymentTypes", "ldn_PaymentTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("LeDoyenModel.FK_ldn_Agreements_ldn_PaymentTypes", "ldn_PaymentTypes").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentType> PaymentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentType>("LeDoyenModel.FK_ldn_Agreements_ldn_PaymentTypes", "ldn_PaymentTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentType>("LeDoyenModel.FK_ldn_Agreements_ldn_PaymentTypes", "ldn_PaymentTypes", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeDoyenModel", "FK_ldn_Agreements_ldn_Projects", "ldn_Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LeDoyenModel.FK_ldn_Agreements_ldn_Projects", "ldn_Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LeDoyenModel.FK_ldn_Agreements_ldn_Projects", "ldn_Projects").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LeDoyenModel.FK_ldn_Agreements_ldn_Projects", "ldn_Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("LeDoyenModel.FK_ldn_Agreements_ldn_Projects", "ldn_Projects", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeDoyenModel", Name="Contractor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contractor : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Contractor.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="middleName">Исходное значение свойства MiddleName.</param>
        /// <param name="lastName">Исходное значение свойства LastName.</param>
        /// <param name="englishFullName">Исходное значение свойства EnglishFullName.</param>
        /// <param name="addressEn">Исходное значение свойства AddressEn.</param>
        /// <param name="addressUk">Исходное значение свойства AddressUk.</param>
        /// <param name="passportNumber">Исходное значение свойства PassportNumber.</param>
        /// <param name="passportIssuedBy">Исходное значение свойства PassportIssuedBy.</param>
        /// <param name="passportIssuedDate">Исходное значение свойства PassportIssuedDate.</param>
        public static Contractor CreateContractor(global::System.Int32 id, global::System.String firstName, global::System.String middleName, global::System.String lastName, global::System.String englishFullName, global::System.String addressEn, global::System.String addressUk, global::System.String passportNumber, global::System.String passportIssuedBy, global::System.DateTime passportIssuedDate)
        {
            Contractor contractor = new Contractor();
            contractor.ID = id;
            contractor.FirstName = firstName;
            contractor.MiddleName = middleName;
            contractor.LastName = lastName;
            contractor.EnglishFullName = englishFullName;
            contractor.AddressEn = addressEn;
            contractor.AddressUk = addressUk;
            contractor.PassportNumber = passportNumber;
            contractor.PassportIssuedBy = passportIssuedBy;
            contractor.PassportIssuedDate = passportIssuedDate;
            return contractor;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EnglishFullName
        {
            get
            {
                return _EnglishFullName;
            }
            set
            {
                OnEnglishFullNameChanging(value);
                ReportPropertyChanging("EnglishFullName");
                _EnglishFullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EnglishFullName");
                OnEnglishFullNameChanged();
            }
        }
        private global::System.String _EnglishFullName;
        partial void OnEnglishFullNameChanging(global::System.String value);
        partial void OnEnglishFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxID
        {
            get
            {
                return _TaxID;
            }
            set
            {
                OnTaxIDChanging(value);
                ReportPropertyChanging("TaxID");
                _TaxID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxID");
                OnTaxIDChanged();
            }
        }
        private global::System.String _TaxID;
        partial void OnTaxIDChanging(global::System.String value);
        partial void OnTaxIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressEn
        {
            get
            {
                return _AddressEn;
            }
            set
            {
                OnAddressEnChanging(value);
                ReportPropertyChanging("AddressEn");
                _AddressEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressEn");
                OnAddressEnChanged();
            }
        }
        private global::System.String _AddressEn;
        partial void OnAddressEnChanging(global::System.String value);
        partial void OnAddressEnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressUk
        {
            get
            {
                return _AddressUk;
            }
            set
            {
                OnAddressUkChanging(value);
                ReportPropertyChanging("AddressUk");
                _AddressUk = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressUk");
                OnAddressUkChanged();
            }
        }
        private global::System.String _AddressUk;
        partial void OnAddressUkChanging(global::System.String value);
        partial void OnAddressUkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportNumber
        {
            get
            {
                return _PassportNumber;
            }
            set
            {
                OnPassportNumberChanging(value);
                ReportPropertyChanging("PassportNumber");
                _PassportNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassportNumber");
                OnPassportNumberChanged();
            }
        }
        private global::System.String _PassportNumber;
        partial void OnPassportNumberChanging(global::System.String value);
        partial void OnPassportNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportIssuedBy
        {
            get
            {
                return _PassportIssuedBy;
            }
            set
            {
                OnPassportIssuedByChanging(value);
                ReportPropertyChanging("PassportIssuedBy");
                _PassportIssuedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassportIssuedBy");
                OnPassportIssuedByChanged();
            }
        }
        private global::System.String _PassportIssuedBy;
        partial void OnPassportIssuedByChanging(global::System.String value);
        partial void OnPassportIssuedByChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PassportIssuedDate
        {
            get
            {
                return _PassportIssuedDate;
            }
            set
            {
                OnPassportIssuedDateChanging(value);
                ReportPropertyChanging("PassportIssuedDate");
                _PassportIssuedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportIssuedDate");
                OnPassportIssuedDateChanged();
            }
        }
        private global::System.DateTime _PassportIssuedDate;
        partial void OnPassportIssuedDateChanging(global::System.DateTime value);
        partial void OnPassportIssuedDateChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeDoyenModel", "FK_ldn_Agreements_ldn_Contractors", "ldn_Agreements")]
        public EntityCollection<Agreement> Agreements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agreement>("LeDoyenModel.FK_ldn_Agreements_ldn_Contractors", "ldn_Agreements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agreement>("LeDoyenModel.FK_ldn_Agreements_ldn_Contractors", "ldn_Agreements", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeDoyenModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Language.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="cultureName">Исходное значение свойства CultureName.</param>
        /// <param name="cultureID">Исходное значение свойства CultureID.</param>
        /// <param name="languageName">Исходное значение свойства LanguageName.</param>
        /// <param name="nativeLanguageName">Исходное значение свойства NativeLanguageName.</param>
        public static Language CreateLanguage(global::System.Int32 id, global::System.String cultureName, global::System.Int32 cultureID, global::System.String languageName, global::System.String nativeLanguageName)
        {
            Language language = new Language();
            language.ID = id;
            language.CultureName = cultureName;
            language.CultureID = cultureID;
            language.LanguageName = languageName;
            language.NativeLanguageName = nativeLanguageName;
            return language;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CultureName
        {
            get
            {
                return _CultureName;
            }
            set
            {
                OnCultureNameChanging(value);
                ReportPropertyChanging("CultureName");
                _CultureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CultureName");
                OnCultureNameChanged();
            }
        }
        private global::System.String _CultureName;
        partial void OnCultureNameChanging(global::System.String value);
        partial void OnCultureNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CultureID
        {
            get
            {
                return _CultureID;
            }
            set
            {
                OnCultureIDChanging(value);
                ReportPropertyChanging("CultureID");
                _CultureID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CultureID");
                OnCultureIDChanged();
            }
        }
        private global::System.Int32 _CultureID;
        partial void OnCultureIDChanging(global::System.Int32 value);
        partial void OnCultureIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguageName
        {
            get
            {
                return _LanguageName;
            }
            set
            {
                OnLanguageNameChanging(value);
                ReportPropertyChanging("LanguageName");
                _LanguageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LanguageName");
                OnLanguageNameChanged();
            }
        }
        private global::System.String _LanguageName;
        partial void OnLanguageNameChanging(global::System.String value);
        partial void OnLanguageNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NativeLanguageName
        {
            get
            {
                return _NativeLanguageName;
            }
            set
            {
                OnNativeLanguageNameChanging(value);
                ReportPropertyChanging("NativeLanguageName");
                _NativeLanguageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NativeLanguageName");
                OnNativeLanguageNameChanged();
            }
        }
        private global::System.String _NativeLanguageName;
        partial void OnNativeLanguageNameChanging(global::System.String value);
        partial void OnNativeLanguageNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeDoyenModel", Name="PaymentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PaymentType.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="nameEn">Исходное значение свойства NameEn.</param>
        /// <param name="nameUa">Исходное значение свойства NameUa.</param>
        /// <param name="nameGenitiveEn">Исходное значение свойства NameGenitiveEn.</param>
        /// <param name="nameGenitiveUa">Исходное значение свойства NameGenitiveUa.</param>
        public static PaymentType CreatePaymentType(global::System.Int32 id, global::System.String nameEn, global::System.String nameUa, global::System.String nameGenitiveEn, global::System.String nameGenitiveUa)
        {
            PaymentType paymentType = new PaymentType();
            paymentType.ID = id;
            paymentType.NameEn = nameEn;
            paymentType.NameUa = nameUa;
            paymentType.NameGenitiveEn = nameGenitiveEn;
            paymentType.NameGenitiveUa = nameGenitiveUa;
            return paymentType;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameEn
        {
            get
            {
                return _NameEn;
            }
            set
            {
                OnNameEnChanging(value);
                ReportPropertyChanging("NameEn");
                _NameEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameEn");
                OnNameEnChanged();
            }
        }
        private global::System.String _NameEn;
        partial void OnNameEnChanging(global::System.String value);
        partial void OnNameEnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameUa
        {
            get
            {
                return _NameUa;
            }
            set
            {
                OnNameUaChanging(value);
                ReportPropertyChanging("NameUa");
                _NameUa = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameUa");
                OnNameUaChanged();
            }
        }
        private global::System.String _NameUa;
        partial void OnNameUaChanging(global::System.String value);
        partial void OnNameUaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameGenitiveEn
        {
            get
            {
                return _NameGenitiveEn;
            }
            set
            {
                OnNameGenitiveEnChanging(value);
                ReportPropertyChanging("NameGenitiveEn");
                _NameGenitiveEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameGenitiveEn");
                OnNameGenitiveEnChanged();
            }
        }
        private global::System.String _NameGenitiveEn;
        partial void OnNameGenitiveEnChanging(global::System.String value);
        partial void OnNameGenitiveEnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameGenitiveUa
        {
            get
            {
                return _NameGenitiveUa;
            }
            set
            {
                OnNameGenitiveUaChanging(value);
                ReportPropertyChanging("NameGenitiveUa");
                _NameGenitiveUa = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameGenitiveUa");
                OnNameGenitiveUaChanged();
            }
        }
        private global::System.String _NameGenitiveUa;
        partial void OnNameGenitiveUaChanging(global::System.String value);
        partial void OnNameGenitiveUaChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeDoyenModel", "FK_ldn_Agreements_ldn_PaymentTypes", "ldn_Agreements")]
        public EntityCollection<Agreement> Agreements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agreement>("LeDoyenModel.FK_ldn_Agreements_ldn_PaymentTypes", "ldn_Agreements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agreement>("LeDoyenModel.FK_ldn_Agreements_ldn_PaymentTypes", "ldn_Agreements", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeDoyenModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Project.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="typeNameUk">Исходное значение свойства TypeNameUk.</param>
        /// <param name="nameUk">Исходное значение свойства NameUk.</param>
        /// <param name="workNameUk">Исходное значение свойства WorkNameUk.</param>
        /// <param name="typeNameEn">Исходное значение свойства TypeNameEn.</param>
        /// <param name="nameEn">Исходное значение свойства NameEn.</param>
        /// <param name="workNameEn">Исходное значение свойства WorkNameEn.</param>
        public static Project CreateProject(global::System.Int32 id, global::System.String typeNameUk, global::System.String nameUk, global::System.String workNameUk, global::System.String typeNameEn, global::System.String nameEn, global::System.String workNameEn)
        {
            Project project = new Project();
            project.ID = id;
            project.TypeNameUk = typeNameUk;
            project.NameUk = nameUk;
            project.WorkNameUk = workNameUk;
            project.TypeNameEn = typeNameEn;
            project.NameEn = nameEn;
            project.WorkNameEn = workNameEn;
            return project;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeNameUk
        {
            get
            {
                return _TypeNameUk;
            }
            set
            {
                OnTypeNameUkChanging(value);
                ReportPropertyChanging("TypeNameUk");
                _TypeNameUk = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeNameUk");
                OnTypeNameUkChanged();
            }
        }
        private global::System.String _TypeNameUk;
        partial void OnTypeNameUkChanging(global::System.String value);
        partial void OnTypeNameUkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameUk
        {
            get
            {
                return _NameUk;
            }
            set
            {
                OnNameUkChanging(value);
                ReportPropertyChanging("NameUk");
                _NameUk = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameUk");
                OnNameUkChanged();
            }
        }
        private global::System.String _NameUk;
        partial void OnNameUkChanging(global::System.String value);
        partial void OnNameUkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkNameUk
        {
            get
            {
                return _WorkNameUk;
            }
            set
            {
                OnWorkNameUkChanging(value);
                ReportPropertyChanging("WorkNameUk");
                _WorkNameUk = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkNameUk");
                OnWorkNameUkChanged();
            }
        }
        private global::System.String _WorkNameUk;
        partial void OnWorkNameUkChanging(global::System.String value);
        partial void OnWorkNameUkChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeNameEn
        {
            get
            {
                return _TypeNameEn;
            }
            set
            {
                OnTypeNameEnChanging(value);
                ReportPropertyChanging("TypeNameEn");
                _TypeNameEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeNameEn");
                OnTypeNameEnChanged();
            }
        }
        private global::System.String _TypeNameEn;
        partial void OnTypeNameEnChanging(global::System.String value);
        partial void OnTypeNameEnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameEn
        {
            get
            {
                return _NameEn;
            }
            set
            {
                OnNameEnChanging(value);
                ReportPropertyChanging("NameEn");
                _NameEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameEn");
                OnNameEnChanged();
            }
        }
        private global::System.String _NameEn;
        partial void OnNameEnChanging(global::System.String value);
        partial void OnNameEnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkNameEn
        {
            get
            {
                return _WorkNameEn;
            }
            set
            {
                OnWorkNameEnChanging(value);
                ReportPropertyChanging("WorkNameEn");
                _WorkNameEn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkNameEn");
                OnWorkNameEnChanged();
            }
        }
        private global::System.String _WorkNameEn;
        partial void OnWorkNameEnChanging(global::System.String value);
        partial void OnWorkNameEnChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeDoyenModel", "FK_ldn_Agreements_ldn_Projects", "ldn_Agreements")]
        public EntityCollection<Agreement> Agreements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agreement>("LeDoyenModel.FK_ldn_Agreements_ldn_Projects", "ldn_Agreements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agreement>("LeDoyenModel.FK_ldn_Agreements_ldn_Projects", "ldn_Agreements", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
